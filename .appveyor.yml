# Copyright (c) 2016-2020 Knuth Project developers.
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

shallow_clone: true

os:
  - Visual Studio 2017

build:
  verbosity: detailed

configuration:
  - Release

branches:
  only:
    - master
    - dev


environment:
    # VS150COMNTOOLS: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\Tools\\"

    matrix:
 
      - PYTHON: "C:\\Python27-x64"
        PYTHON_VERSION: "2.7.13"
        PYTHON_ARCH: "64"
        WINDOWS_SDK_VERSION: "v7.0"
        DISTRIBUTIONS: "sdist bdist_wheel"
        APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017




install:
  ############################################################################
  # All external dependencies are installed in C:\projects\deps
  ############################################################################
  - mkdir C:\projects\deps
  - cd C:\projects\deps

  ############################################################################
  # Install Ninja
  ############################################################################
  - set NINJA_URL="https://github.com/ninja-build/ninja/releases/download/v1.6.0/ninja-win.zip"
  - appveyor DownloadFile %NINJA_URL% -FileName ninja.zip
  - 7z x ninja.zip -oC:\projects\deps\ninja > nul
  - set PATH=C:\projects\deps\ninja;%PATH%
  - ninja --version

  ############################################################################
  # Install a recent CMake
  ############################################################################
  #- set CMAKE_URL="https://cmake.org/files/v3.8/cmake-3.8.0-win64-x64.zip"
  - set CMAKE_URL="https://cmake.org/files/v3.9/cmake-3.9.0-rc6-win64-x64.zip"
  - appveyor DownloadFile %CMAKE_URL% -FileName cmake.zip
  - 7z x cmake.zip -oC:\projects\deps > nul
  - move C:\projects\deps\cmake-* C:\projects\deps\cmake # Move to a version-agnostic directory
  - set PATH=C:\projects\deps\cmake\bin;%PATH%
  - cmake --version
  
  # ############################################################################
  # # Install boost with fpic
  # ############################################################################
  # - mkdir C:\projects\deps\boost
  # - mkdir C:\projects\deps\boost\stage
  # - mkdir C:\projects\deps\boost\boost
  # # LIB
  # - set BOOST_LIB_URL="http://repo.kth.cash/packages/binary/boost_msvc_141_fpic.7z"
  # - appveyor DownloadFile %BOOST_LIB_URL% -FileName boost_lib.7z
  # - 7z x boost_lib.7z -oC:\projects\deps\boost\stage > nul
  # - cd C:\projects\deps\boost\stage
  # - rename boost_msvc_141_fpic lib
  # - cd C:\projects\deps\boost\stage\lib
  
  # # HEADERS
  # - set BOOST_H_URL="http://repo.kth.cash/packages/binary/boost_1_64_include.7z"
  # - appveyor DownloadFile %BOOST_H_URL% -FileName boost_h.7z
  # - 7z x boost_h.7z -oC:\projects\deps\boost > nul
  # - cd C:\projects\deps\boost\boost

  ############################################################################
  # Setup the path to Clang-cl
  ############################################################################
  - set PATH="C:\Program Files\LLVM\bin";%PATH%
  - clang-cl -v


  ############################################################################
  # Conan Install
  ############################################################################
  - SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%

  # - SET VS90COMNTOOLS=%VS140COMNTOOLS%
  # - cd "c:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\"
  # - ren "Visual C++ for Python" "Visual C++ for Python Do Not Use"
  # - cd "C:\Program Files (x86)\"
  # - ren "Microsoft Visual Studio 9.0" "Microsoft Visual Studio 9.0 Do Not Use"
  # # - cp "c:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include\stdint.h" "C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\include\stdint.h"


  # - set PATH=%PATH%;%PYTHON%/Scripts/
  - "%PYTHON%\\Scripts\\pip.exe --version"
  # - "%PYTHON%\\Scripts\\pip.exe install --upgrade setuptools"
  - "%PYTHON%\\Scripts\\pip.exe install conan --upgrade"
  # - "%PYTHON%\\Scripts\\pip.exe install conan_package_tools"
  # - "%PYTHON%\\python.exe -m pip install wheel"
  # - "%PYTHON%\\python.exe -m pip install twine"
  - "%PYTHON%\\python.exe --version"
  - "%PYTHON%\\python.exe -c \"import struct;print( 8 * struct.calcsize('P'))\""
  - conan user # It creates the conan data directory
  - conan remote add kth_temp https://api.bintray.com/conan/k-nuth/kth


before_build:
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat" amd64
  - mkdir C:\projects\kth-recursive

build_script:
  - cd C:\projects\kth-recursive
  - git clone https://github.com/k-nuth/kth --recursive
  - cd kth
  - git checkout dev
  - git pull
  - git submodule update
  # - dir
  - mkdir build
  - cd build
  # - dir ..
  - conan install ..
  
  - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DENABLE_TESTS=OFF -DWITH_EXAMPLES=OFF -DWITH_REMOTE_DATABASE=OFF -DWITH_REMOTE_BLOCKCHAIN=OFF -DWITH_LITECOIN=OFF -DWITH_TESTS=OFF -DENABLE_MODULE_RECOVERY=ON -DWITH_TOOLS=OFF
  #  -DBOOST_ROOT=C:\projects\deps\boost
  - cmake --build .
